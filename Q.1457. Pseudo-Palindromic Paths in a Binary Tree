/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    bool judge(const vector<int>& path ){
        int cnt=0;
        for(int i=1;i<10;++i){
            if(path[i] & 1) ++cnt;
        }
        if (cnt>1) return false;
        return true;
    }
    int ans=0;
    void solve(TreeNode* root,vector<int>& path){
        if(!root) return;
        path[root->val]++;
        if(!root->left && !root->right) 
            if(judge(path)) {++ans;path[root->val]--;return;}
        solve(root->left,path);
        solve(root->right,path);
        path[root->val]--;

    }
public:
    int pseudoPalindromicPaths (TreeNode* root) {
        if(!root->left && !root->right) return 1;
        vector<int> path(10,0);
        solve(root,path);
        return ans;
    }
};
